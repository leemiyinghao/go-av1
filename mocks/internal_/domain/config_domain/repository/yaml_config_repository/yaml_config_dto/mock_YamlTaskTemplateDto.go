// Code generated by mockery v2.46.3. DO NOT EDIT.

package yaml_config_dto

import (
	task_flow "github.com/leemiyinghao/go-av1/internal/entity/task_flow"
	mock "github.com/stretchr/testify/mock"
)

// MockYamlTaskTemplateDto is an autogenerated mock type for the YamlTaskTemplateDto type
type MockYamlTaskTemplateDto struct {
	mock.Mock
}

type MockYamlTaskTemplateDto_Expecter struct {
	mock *mock.Mock
}

func (_m *MockYamlTaskTemplateDto) EXPECT() *MockYamlTaskTemplateDto_Expecter {
	return &MockYamlTaskTemplateDto_Expecter{mock: &_m.Mock}
}

// AsTask provides a mock function with given fields:
func (_m *MockYamlTaskTemplateDto) AsTask() task_flow.Task {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for AsTask")
	}

	var r0 task_flow.Task
	if rf, ok := ret.Get(0).(func() task_flow.Task); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(task_flow.Task)
		}
	}

	return r0
}

// MockYamlTaskTemplateDto_AsTask_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'AsTask'
type MockYamlTaskTemplateDto_AsTask_Call struct {
	*mock.Call
}

// AsTask is a helper method to define mock.On call
func (_e *MockYamlTaskTemplateDto_Expecter) AsTask() *MockYamlTaskTemplateDto_AsTask_Call {
	return &MockYamlTaskTemplateDto_AsTask_Call{Call: _e.mock.On("AsTask")}
}

func (_c *MockYamlTaskTemplateDto_AsTask_Call) Run(run func()) *MockYamlTaskTemplateDto_AsTask_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockYamlTaskTemplateDto_AsTask_Call) Return(_a0 task_flow.Task) *MockYamlTaskTemplateDto_AsTask_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockYamlTaskTemplateDto_AsTask_Call) RunAndReturn(run func() task_flow.Task) *MockYamlTaskTemplateDto_AsTask_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockYamlTaskTemplateDto creates a new instance of MockYamlTaskTemplateDto. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockYamlTaskTemplateDto(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockYamlTaskTemplateDto {
	mock := &MockYamlTaskTemplateDto{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
