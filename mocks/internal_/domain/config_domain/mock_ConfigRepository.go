// Code generated by mockery v2.46.3. DO NOT EDIT.

package config_domain

import (
	task_flow "github.com/leemiyinghao/go-av1/internal/entity/task_flow"
	mock "github.com/stretchr/testify/mock"
)

// MockConfigRepository is an autogenerated mock type for the ConfigRepository type
type MockConfigRepository struct {
	mock.Mock
}

type MockConfigRepository_Expecter struct {
	mock *mock.Mock
}

func (_m *MockConfigRepository) EXPECT() *MockConfigRepository_Expecter {
	return &MockConfigRepository_Expecter{mock: &_m.Mock}
}

// GetTaskFlowTemplate provides a mock function with given fields: rootPath
func (_m *MockConfigRepository) GetTaskFlowTemplate(rootPath string) (task_flow.TaskFlowTemplate, error) {
	ret := _m.Called(rootPath)

	if len(ret) == 0 {
		panic("no return value specified for GetTaskFlowTemplate")
	}

	var r0 task_flow.TaskFlowTemplate
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (task_flow.TaskFlowTemplate, error)); ok {
		return rf(rootPath)
	}
	if rf, ok := ret.Get(0).(func(string) task_flow.TaskFlowTemplate); ok {
		r0 = rf(rootPath)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(task_flow.TaskFlowTemplate)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(rootPath)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockConfigRepository_GetTaskFlowTemplate_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetTaskFlowTemplate'
type MockConfigRepository_GetTaskFlowTemplate_Call struct {
	*mock.Call
}

// GetTaskFlowTemplate is a helper method to define mock.On call
//   - rootPath string
func (_e *MockConfigRepository_Expecter) GetTaskFlowTemplate(rootPath interface{}) *MockConfigRepository_GetTaskFlowTemplate_Call {
	return &MockConfigRepository_GetTaskFlowTemplate_Call{Call: _e.mock.On("GetTaskFlowTemplate", rootPath)}
}

func (_c *MockConfigRepository_GetTaskFlowTemplate_Call) Run(run func(rootPath string)) *MockConfigRepository_GetTaskFlowTemplate_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockConfigRepository_GetTaskFlowTemplate_Call) Return(_a0 task_flow.TaskFlowTemplate, _a1 error) *MockConfigRepository_GetTaskFlowTemplate_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockConfigRepository_GetTaskFlowTemplate_Call) RunAndReturn(run func(string) (task_flow.TaskFlowTemplate, error)) *MockConfigRepository_GetTaskFlowTemplate_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockConfigRepository creates a new instance of MockConfigRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockConfigRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockConfigRepository {
	mock := &MockConfigRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
