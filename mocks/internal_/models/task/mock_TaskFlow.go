// Code generated by mockery v2.46.3. DO NOT EDIT.

package task

import (
	task "github.com/leemiyinghao/go-av1/internal/models/task"
	mock "github.com/stretchr/testify/mock"
)

// MockTaskFlow is an autogenerated mock type for the TaskFlow type
type MockTaskFlow struct {
	mock.Mock
}

type MockTaskFlow_Expecter struct {
	mock *mock.Mock
}

func (_m *MockTaskFlow) EXPECT() *MockTaskFlow_Expecter {
	return &MockTaskFlow_Expecter{mock: &_m.Mock}
}

// GenerateNext provides a mock function with given fields:
func (_m *MockTaskFlow) GenerateNext() task.Task {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GenerateNext")
	}

	var r0 task.Task
	if rf, ok := ret.Get(0).(func() task.Task); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(task.Task)
		}
	}

	return r0
}

// MockTaskFlow_GenerateNext_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GenerateNext'
type MockTaskFlow_GenerateNext_Call struct {
	*mock.Call
}

// GenerateNext is a helper method to define mock.On call
func (_e *MockTaskFlow_Expecter) GenerateNext() *MockTaskFlow_GenerateNext_Call {
	return &MockTaskFlow_GenerateNext_Call{Call: _e.mock.On("GenerateNext")}
}

func (_c *MockTaskFlow_GenerateNext_Call) Run(run func()) *MockTaskFlow_GenerateNext_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockTaskFlow_GenerateNext_Call) Return(_a0 task.Task) *MockTaskFlow_GenerateNext_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockTaskFlow_GenerateNext_Call) RunAndReturn(run func() task.Task) *MockTaskFlow_GenerateNext_Call {
	_c.Call.Return(run)
	return _c
}

// Reset provides a mock function with given fields:
func (_m *MockTaskFlow) Reset() {
	_m.Called()
}

// MockTaskFlow_Reset_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Reset'
type MockTaskFlow_Reset_Call struct {
	*mock.Call
}

// Reset is a helper method to define mock.On call
func (_e *MockTaskFlow_Expecter) Reset() *MockTaskFlow_Reset_Call {
	return &MockTaskFlow_Reset_Call{Call: _e.mock.On("Reset")}
}

func (_c *MockTaskFlow_Reset_Call) Run(run func()) *MockTaskFlow_Reset_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockTaskFlow_Reset_Call) Return() *MockTaskFlow_Reset_Call {
	_c.Call.Return()
	return _c
}

func (_c *MockTaskFlow_Reset_Call) RunAndReturn(run func()) *MockTaskFlow_Reset_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockTaskFlow creates a new instance of MockTaskFlow. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockTaskFlow(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockTaskFlow {
	mock := &MockTaskFlow{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
